-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."user"
(
    id integer NOT NULL,
    email_address character varying NOT NULL,
    username character varying(50),
    phone_number character varying(25),
    password character varying(50) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.address
(
    id integer NOT NULL,
    house_number integer NOT NULL,
    street_number character varying,
    address_line character varying NOT NULL,
    city character varying NOT NULL,
    region character varying NOT NULL,
    postal_code character varying NOT NULL,
    country_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.country
(
    id integer NOT NULL,
    country_name character varying NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.user_address
(
    user_id integer NOT NULL,
    address_id integer NOT NULL,
    is_default boolean
);

CREATE TABLE IF NOT EXISTS public.payment_method
(
    id integer NOT NULL,
    user_id integer NOT NULL,
    payment_type_id integer NOT NULL,
    provider character varying NOT NULL,
    account_number bigint NOT NULL,
    expiry_date date NOT NULL,
    is_default boolean,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.payment_type
(
    id integer NOT NULL,
    type character varying,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_category
(
    id integer NOT NULL,
    parent_category_id integer NOT NULL,
    category character varying,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product
(
    "id " integer NOT NULL,
    category_id integer NOT NULL,
    name character varying NOT NULL,
    description text NOT NULL,
    product_image text NOT NULL,
    PRIMARY KEY ("id ")
);

CREATE TABLE IF NOT EXISTS public.variation
(
    id integer NOT NULL,
    category_id integer NOT NULL,
    name text NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.variation_option
(
    id integer NOT NULL,
    variation_id integer NOT NULL,
    value character varying(50),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.product_item
(
    id integer NOT NULL,
    product_id integer NOT NULL,
    qty_in_stock integer NOT NULL,
    "SKU" bigint NOT NULL,
    product_image text,
    price numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.item_variation
(
    product_item_id integer NOT NULL,
    variation_option_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.shopping_cart
(
    id integer NOT NULL,
    user_id integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.cart_item
(
    id integer NOT NULL,
    shopping_cart_id integer NOT NULL,
    product_item_id integer NOT NULL,
    qty integer NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.shop_order
(
    id integer NOT NULL,
    user_id integer NOT NULL,
    payment_method_id integer NOT NULL,
    shipping_address_id integer NOT NULL,
    shipping_method_id integer NOT NULL,
    order_status_id integer NOT NULL,
    order_total numeric NOT NULL,
    order_date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.shipping_method
(
    id integer NOT NULL,
    name character varying NOT NULL,
    price numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_status
(
    id integer NOT NULL,
    status character varying(30) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.order_line
(
    id integer NOT NULL,
    product_item_id integer NOT NULL,
    order_id integer NOT NULL,
    qty integer NOT NULL,
    price numeric NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.reviews
(
    id integer NOT NULL,
    user_id integer NOT NULL,
    ordered_product_id integer NOT NULL,
    rating integer,
    comment text,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.promotion
(
    id integer NOT NULL,
    name character varying NOT NULL,
    description text,
    discount_rate numeric NOT NULL,
    start_date date NOT NULL,
    end_date date NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.promotion_category
(
    promtotion_id integer NOT NULL,
    category_id integer NOT NULL
);

ALTER TABLE IF EXISTS public.address
    ADD CONSTRAINT country_id FOREIGN KEY (country_id)
    REFERENCES public.country (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_address
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.user_address
    ADD CONSTRAINT address_id FOREIGN KEY (address_id)
    REFERENCES public.address (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payment_method
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payment_method
    ADD CONSTRAINT payment_type FOREIGN KEY (payment_type_id)
    REFERENCES public.payment_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_category
    ADD CONSTRAINT parent_category_id FOREIGN KEY (parent_category_id)
    REFERENCES public.product_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product
    ADD CONSTRAINT "category_id_FK" FOREIGN KEY (category_id)
    REFERENCES public.product_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.variation
    ADD CONSTRAINT category_id FOREIGN KEY (category_id)
    REFERENCES public.product_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.variation_option
    ADD CONSTRAINT variation FOREIGN KEY (variation_id)
    REFERENCES public.variation (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_item
    ADD CONSTRAINT product_id FOREIGN KEY (product_id)
    REFERENCES public.product ("id ") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.item_variation
    ADD CONSTRAINT product_item_id FOREIGN KEY (product_item_id)
    REFERENCES public.product_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.item_variation
    ADD CONSTRAINT variation_option_id FOREIGN KEY (variation_option_id)
    REFERENCES public.variation_option (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shopping_cart
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_item
    ADD CONSTRAINT product_item_id FOREIGN KEY (product_item_id)
    REFERENCES public.product_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart_item
    ADD FOREIGN KEY (shopping_cart_id)
    REFERENCES public.shopping_cart (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shop_order
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shop_order
    ADD CONSTRAINT payment_method_id FOREIGN KEY (payment_method_id)
    REFERENCES public.payment_method (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shop_order
    ADD CONSTRAINT shipping_address FOREIGN KEY (shipping_address_id)
    REFERENCES public.user_address (address_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shop_order
    ADD CONSTRAINT shipping_method_id FOREIGN KEY (shipping_method_id)
    REFERENCES public.shipping_method (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.shop_order
    ADD CONSTRAINT order_status_id FOREIGN KEY (order_status_id)
    REFERENCES public.order_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_line
    ADD CONSTRAINT product_item_id FOREIGN KEY (product_item_id)
    REFERENCES public.product_item (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.order_line
    ADD CONSTRAINT order_id FOREIGN KEY (order_id)
    REFERENCES public.shop_order (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT user_id FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.reviews
    ADD CONSTRAINT ordered_product_id FOREIGN KEY (ordered_product_id)
    REFERENCES public.order_line (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.promotion_category
    ADD CONSTRAINT category_id FOREIGN KEY (category_id)
    REFERENCES public.product_category (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.promotion_category
    ADD CONSTRAINT promotion_id FOREIGN KEY (promtotion_id)
    REFERENCES public.promotion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;